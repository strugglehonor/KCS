// Code generated by MockGen. DO NOT EDIT.
// Source: deployment.go

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/strugglehonor/KCS/internal/model"
)

// MockDeploymentSrv is a mock of DeploymentSrv interface.
type MockDeploymentSrv struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentSrvMockRecorder
}

// MockDeploymentSrvMockRecorder is the mock recorder for MockDeploymentSrv.
type MockDeploymentSrvMockRecorder struct {
	mock *MockDeploymentSrv
}

// NewMockDeploymentSrv creates a new mock instance.
func NewMockDeploymentSrv(ctrl *gomock.Controller) *MockDeploymentSrv {
	mock := &MockDeploymentSrv{ctrl: ctrl}
	mock.recorder = &MockDeploymentSrvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentSrv) EXPECT() *MockDeploymentSrvMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeploymentSrv) Create(ctx context.Context, deployment *model.Deployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, deployment)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDeploymentSrvMockRecorder) Create(ctx, deployment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeploymentSrv)(nil).Create), ctx, deployment)
}

// Delete mocks base method.
func (m *MockDeploymentSrv) Delete(ctx context.Context, deployment *model.Deployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, deployment)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDeploymentSrvMockRecorder) Delete(ctx, deployment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDeploymentSrv)(nil).Delete), ctx, deployment)
}

// Update mocks base method.
func (m *MockDeploymentSrv) Update(ctx context.Context, deployment *model.Deployment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, deployment)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockDeploymentSrvMockRecorder) Update(ctx, deployment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockDeploymentSrv)(nil).Update), ctx, deployment)
}
